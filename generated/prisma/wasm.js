
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.AlbumScalarFieldEnum = {
  AlbumId: 'AlbumId',
  Title: 'Title',
  ArtistId: 'ArtistId'
};

exports.Prisma.ArtistScalarFieldEnum = {
  ArtistId: 'ArtistId',
  Name: 'Name'
};

exports.Prisma.CustomerScalarFieldEnum = {
  CustomerId: 'CustomerId',
  FirstName: 'FirstName',
  LastName: 'LastName',
  Company: 'Company',
  Address: 'Address',
  City: 'City',
  State: 'State',
  Country: 'Country',
  PostalCode: 'PostalCode',
  Phone: 'Phone',
  Fax: 'Fax',
  Email: 'Email',
  SupportRepId: 'SupportRepId'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  EmployeeId: 'EmployeeId',
  LastName: 'LastName',
  FirstName: 'FirstName',
  Title: 'Title',
  ReportsTo: 'ReportsTo',
  BirthDate: 'BirthDate',
  HireDate: 'HireDate',
  Address: 'Address',
  City: 'City',
  State: 'State',
  Country: 'Country',
  PostalCode: 'PostalCode',
  Phone: 'Phone',
  Fax: 'Fax',
  Email: 'Email'
};

exports.Prisma.GenreScalarFieldEnum = {
  GenreId: 'GenreId',
  Name: 'Name'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  InvoiceId: 'InvoiceId',
  CustomerId: 'CustomerId',
  InvoiceDate: 'InvoiceDate',
  BillingAddress: 'BillingAddress',
  BillingCity: 'BillingCity',
  BillingState: 'BillingState',
  BillingCountry: 'BillingCountry',
  BillingPostalCode: 'BillingPostalCode',
  Total: 'Total'
};

exports.Prisma.InvoiceLineScalarFieldEnum = {
  InvoiceLineId: 'InvoiceLineId',
  InvoiceId: 'InvoiceId',
  TrackId: 'TrackId',
  UnitPrice: 'UnitPrice',
  Quantity: 'Quantity'
};

exports.Prisma.MediaTypeScalarFieldEnum = {
  MediaTypeId: 'MediaTypeId',
  Name: 'Name'
};

exports.Prisma.PlaylistScalarFieldEnum = {
  PlaylistId: 'PlaylistId',
  Name: 'Name'
};

exports.Prisma.PlaylistTrackScalarFieldEnum = {
  PlaylistId: 'PlaylistId',
  TrackId: 'TrackId'
};

exports.Prisma.TrackScalarFieldEnum = {
  TrackId: 'TrackId',
  Name: 'Name',
  AlbumId: 'AlbumId',
  MediaTypeId: 'MediaTypeId',
  GenreId: 'GenreId',
  Composer: 'Composer',
  Milliseconds: 'Milliseconds',
  Bytes: 'Bytes',
  UnitPrice: 'UnitPrice'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Album: 'Album',
  Artist: 'Artist',
  Customer: 'Customer',
  Employee: 'Employee',
  Genre: 'Genre',
  Invoice: 'Invoice',
  InvoiceLine: 'InvoiceLine',
  MediaType: 'MediaType',
  Playlist: 'Playlist',
  PlaylistTrack: 'PlaylistTrack',
  Track: 'Track'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ingcampoverde/Documents/PersonalProjects/nestJsMIcroServices/library-matox/resources/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/ingcampoverde/Documents/PersonalProjects/nestJsMIcroServices/library-matox/resources/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Album {\n  AlbumId  Int     @id @default(autoincrement())\n  Title    String\n  ArtistId Int\n  Artist   Artist  @relation(fields: [ArtistId], references: [ArtistId], onDelete: NoAction, onUpdate: NoAction)\n  Track    Track[]\n\n  @@index([ArtistId], map: \"IFK_AlbumArtistId\")\n}\n\nmodel Artist {\n  ArtistId Int     @id @default(autoincrement())\n  Name     String?\n  Album    Album[]\n}\n\nmodel Customer {\n  CustomerId   Int       @id @default(autoincrement())\n  FirstName    String\n  LastName     String\n  Company      String?\n  Address      String?\n  City         String?\n  State        String?\n  Country      String?\n  PostalCode   String?\n  Phone        String?\n  Fax          String?\n  Email        String\n  SupportRepId Int?\n  Employee     Employee? @relation(fields: [SupportRepId], references: [EmployeeId], onDelete: NoAction, onUpdate: NoAction)\n  Invoice      Invoice[]\n\n  @@index([SupportRepId], map: \"IFK_CustomerSupportRepId\")\n}\n\nmodel Employee {\n  EmployeeId     Int        @id @default(autoincrement())\n  LastName       String\n  FirstName      String\n  Title          String?\n  ReportsTo      Int?\n  BirthDate      DateTime?\n  HireDate       DateTime?\n  Address        String?\n  City           String?\n  State          String?\n  Country        String?\n  PostalCode     String?\n  Phone          String?\n  Fax            String?\n  Email          String?\n  Customer       Customer[]\n  Employee       Employee?  @relation(\"EmployeeToEmployee\", fields: [ReportsTo], references: [EmployeeId], onDelete: NoAction, onUpdate: NoAction)\n  other_Employee Employee[] @relation(\"EmployeeToEmployee\")\n\n  @@index([ReportsTo], map: \"IFK_EmployeeReportsTo\")\n}\n\nmodel Genre {\n  GenreId Int     @id @default(autoincrement())\n  Name    String?\n  Track   Track[]\n}\n\nmodel Invoice {\n  InvoiceId         Int           @id @default(autoincrement())\n  CustomerId        Int\n  InvoiceDate       DateTime\n  BillingAddress    String?\n  BillingCity       String?\n  BillingState      String?\n  BillingCountry    String?\n  BillingPostalCode String?\n  Total             Decimal\n  Customer          Customer      @relation(fields: [CustomerId], references: [CustomerId], onDelete: NoAction, onUpdate: NoAction)\n  InvoiceLine       InvoiceLine[]\n\n  @@index([CustomerId], map: \"IFK_InvoiceCustomerId\")\n}\n\nmodel InvoiceLine {\n  InvoiceLineId Int     @id @default(autoincrement())\n  InvoiceId     Int\n  TrackId       Int\n  UnitPrice     Decimal\n  Quantity      Int\n  Track         Track   @relation(fields: [TrackId], references: [TrackId], onDelete: NoAction, onUpdate: NoAction)\n  Invoice       Invoice @relation(fields: [InvoiceId], references: [InvoiceId], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([TrackId], map: \"IFK_InvoiceLineTrackId\")\n  @@index([InvoiceId], map: \"IFK_InvoiceLineInvoiceId\")\n}\n\nmodel MediaType {\n  MediaTypeId Int     @id @default(autoincrement())\n  Name        String?\n  Track       Track[]\n}\n\nmodel Playlist {\n  PlaylistId    Int             @id @default(autoincrement())\n  Name          String?\n  PlaylistTrack PlaylistTrack[]\n}\n\nmodel PlaylistTrack {\n  PlaylistId Int\n  TrackId    Int\n  Track      Track    @relation(fields: [TrackId], references: [TrackId], onDelete: NoAction, onUpdate: NoAction)\n  Playlist   Playlist @relation(fields: [PlaylistId], references: [PlaylistId], onDelete: NoAction, onUpdate: NoAction)\n\n  @@id([PlaylistId, TrackId])\n  @@index([TrackId], map: \"IFK_PlaylistTrackTrackId\")\n}\n\nmodel Track {\n  TrackId       Int             @id @default(autoincrement())\n  Name          String\n  AlbumId       Int?\n  MediaTypeId   Int\n  GenreId       Int?\n  Composer      String?\n  Milliseconds  Int\n  Bytes         Int?\n  UnitPrice     Decimal\n  InvoiceLine   InvoiceLine[]\n  PlaylistTrack PlaylistTrack[]\n  MediaType     MediaType       @relation(fields: [MediaTypeId], references: [MediaTypeId], onDelete: NoAction, onUpdate: NoAction)\n  Genre         Genre?          @relation(fields: [GenreId], references: [GenreId], onDelete: NoAction, onUpdate: NoAction)\n  Album         Album?          @relation(fields: [AlbumId], references: [AlbumId], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([MediaTypeId], map: \"IFK_TrackMediaTypeId\")\n  @@index([GenreId], map: \"IFK_TrackGenreId\")\n  @@index([AlbumId], map: \"IFK_TrackAlbumId\")\n}\n",
  "inlineSchemaHash": "0082121423c2646e08cb8f749b5c4b0033f67b08857e17292e1cd78f74a0a815",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Album\":{\"fields\":[{\"name\":\"AlbumId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ArtistId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Artist\",\"kind\":\"object\",\"type\":\"Artist\",\"relationName\":\"AlbumToArtist\"},{\"name\":\"Track\",\"kind\":\"object\",\"type\":\"Track\",\"relationName\":\"AlbumToTrack\"}],\"dbName\":null},\"Artist\":{\"fields\":[{\"name\":\"ArtistId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Album\",\"kind\":\"object\",\"type\":\"Album\",\"relationName\":\"AlbumToArtist\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"CustomerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"FirstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"City\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"State\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PostalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Fax\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SupportRepId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CustomerToEmployee\"},{\"name\":\"Invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"CustomerToInvoice\"}],\"dbName\":null},\"Employee\":{\"fields\":[{\"name\":\"EmployeeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"LastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FirstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ReportsTo\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"BirthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"HireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"City\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"State\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PostalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Fax\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToEmployee\"},{\"name\":\"Employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToEmployee\"},{\"name\":\"other_Employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToEmployee\"}],\"dbName\":null},\"Genre\":{\"fields\":[{\"name\":\"GenreId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Track\",\"kind\":\"object\",\"type\":\"Track\",\"relationName\":\"GenreToTrack\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"InvoiceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CustomerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"InvoiceDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"BillingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BillingCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BillingState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BillingCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BillingPostalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToInvoice\"},{\"name\":\"InvoiceLine\",\"kind\":\"object\",\"type\":\"InvoiceLine\",\"relationName\":\"InvoiceToInvoiceLine\"}],\"dbName\":null},\"InvoiceLine\":{\"fields\":[{\"name\":\"InvoiceLineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"InvoiceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TrackId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"UnitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Track\",\"kind\":\"object\",\"type\":\"Track\",\"relationName\":\"InvoiceLineToTrack\"},{\"name\":\"Invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToInvoiceLine\"}],\"dbName\":null},\"MediaType\":{\"fields\":[{\"name\":\"MediaTypeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Track\",\"kind\":\"object\",\"type\":\"Track\",\"relationName\":\"MediaTypeToTrack\"}],\"dbName\":null},\"Playlist\":{\"fields\":[{\"name\":\"PlaylistId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PlaylistTrack\",\"kind\":\"object\",\"type\":\"PlaylistTrack\",\"relationName\":\"PlaylistToPlaylistTrack\"}],\"dbName\":null},\"PlaylistTrack\":{\"fields\":[{\"name\":\"PlaylistId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"TrackId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Track\",\"kind\":\"object\",\"type\":\"Track\",\"relationName\":\"PlaylistTrackToTrack\"},{\"name\":\"Playlist\",\"kind\":\"object\",\"type\":\"Playlist\",\"relationName\":\"PlaylistToPlaylistTrack\"}],\"dbName\":null},\"Track\":{\"fields\":[{\"name\":\"TrackId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AlbumId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"MediaTypeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"GenreId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Composer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Milliseconds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Bytes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"UnitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"InvoiceLine\",\"kind\":\"object\",\"type\":\"InvoiceLine\",\"relationName\":\"InvoiceLineToTrack\"},{\"name\":\"PlaylistTrack\",\"kind\":\"object\",\"type\":\"PlaylistTrack\",\"relationName\":\"PlaylistTrackToTrack\"},{\"name\":\"MediaType\",\"kind\":\"object\",\"type\":\"MediaType\",\"relationName\":\"MediaTypeToTrack\"},{\"name\":\"Genre\",\"kind\":\"object\",\"type\":\"Genre\",\"relationName\":\"GenreToTrack\"},{\"name\":\"Album\",\"kind\":\"object\",\"type\":\"Album\",\"relationName\":\"AlbumToTrack\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

